heat_template_version: 2013-05-23

description: |
  Heat template to deploy a load balancer, multiple servers running Django, and a Cloud Database

parameter_groups:

- label: Server Settings
  parameters:
  - server_hostname
  - flavor
  - image
  - server_count

- label: Database Settings
  parameters:
  - db_flavor
  - db_user
  - db_size

- label: Django Settings
  parameters:
  - project_name
  - app_name
  - django_admin_user
  - django_admin_email
  - virtualenv
  - venv_username

- label: rax-dev-params
  # These are parameters that will not be displayed in the portal. The purpose
  # of these parameters are for users who are developing or testing newer or
  # different setups. If any of these parameters are changed, there is a good
  # chance this stack will fail to properly deploy.
  parameters:
  - kitchen
  - chef_version

parameters:

  load_balancer_hostname:
    description: Hostname for the Load Balancer
    type: string
    default: Django-Load-Balancer
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  server_hostname:
    description: Server Name
    type: string
    default: django
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  server_count:
    description: Number of servers to deploy
    type: number
    default: 1
    constraints:
    - range:
        min: 0
        max: 24
      description: Must be between 0 and 24 servers.

  image:
    description: Server Image
    type: string
    default: Ubuntu 12.04 LTS (Precise Pangolin)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin)
      description: Must be a supported operating system.

  flavor:
    description: Rackspace Cloud Server flavor
    type: string
    default: 4 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 60 GB Performance
      - 90 GB Performance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  db_flavor:
    description: Rackspace Cloud Database Flavor
    type: string
    default: 1GB Instance
    constraints:
    - allowed_values:
      - 512MB Instance
      - 1GB Instance
      - 2GB Instance
      - 4GB Instance
      - 8GB Instance
      - 16GB Instance
      description: |
        Must be a valid Rackspace Cloud Database flavor for the region you have
        selected to deploy into.

  db_user:
    description: Username for the database.
    type: string
    default: db_user
    constraints:
    - allowed_pattern: "^(.){1,16}$"
      description: |
        Must be shorter than 16 characters, this is due to MySQL's maximum
        username length.

  db_size:
    type: number
    description: Size of the Rackspace Cloud Database
    default: 10
    constraints:
    - range:
        min: 10
        max: 150
    description: |
        Database instance size, in GB. min 10, max 150

  virtualenv:
    label: virtualenv
    type: string
    default: venv
    description: |
      Python Virtual Environment in which Django will be installed.
      It will be created in the /srv directory.

  project_name:
    type: string
    description: The name to use to create your Django project.
    default: mysite
    constraints:
    - allowed_pattern: "^[A-Za-z0-9_]{1,31}$"
      description: |
          Must be alphanumeric and fewer than 32 chanracters.

  app_name:
    type: string
    description: The name of your app.
    default: myapp
    constraints:
    - allowed_pattern: "^[A-Za-z0-9_]{1,31}$"
      description: |
          Must be alphanumeric and fewer than 32 chanracters.

  django_admin_user:
    type: string
    description: Username for login to Django
    default: djangouser
    constraints:
    - allowed_pattern: "^(?=.*).{0,256}$"
      description: |
          Must be less than 256 chanracters.

  django_admin_email:
    type: string
    description: Email address
    default: admin@example.com
    constraints:
    - allowed_pattern: "^(?=.*).{0,512}$"
      description: |
          Must be less than 512 chanracters.

  venv_username:
    label: System User
    type: string
    default: pydev
    description: |
      Username with which to login to the Linux servers.  This user
      will be the owner of the Python Virtual Environment under which Django
      is installed.
    constraints:
    - allowed_pattern: "^(?!^root$)([a-z_][a-z0-9_]{0,30})$"
      description: alphanumeric, lowercase, and not root.

resources:
  # SSH keys
  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  # Password Generation
  django_admin_pass:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: hexdigits

  db_pass:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: hexdigits

  service_db:
    type: OS::Trove::Instance
    properties:
      name: app_db
      flavor: { get_param: db_flavor }
      size: { get_param: db_size }
      databases:
      - name: app_data
      users:
      - name: { get_param: db_user }
        password: { get_attr: [db_pass, value] }
        databases: [ app_data ]

  django_setup:
    type: "OS::Heat::ResourceGroup"
    depends_on: service_db
    properties:
      count: { get_param: server_count }
      resource_def:
        type: https://raw.github.com/rackspace-orchestration-templates/django-clouddb/master/django-single.yaml
        properties:
          venv_username: { get_param: venv_username }
          private_key: { get_attr: [ssh_key, private_key] }
          app_name: { get_param: app_name }
          server_hostname: { get_param: server_hostname }
          image: { get_param: image }
          flavor: { get_param: flavor }
          ssh_keypair_name: { get_param: ssh_keypair_name }
          virtualenv: { get_param: virtualenv }
          project_name: { get_param: project_name }
          django_admin_user: { get_param: django_admin_user }
          django_admin_email: { get_param: django_admin_email }
          django_admin_pass: { get_attr: [django_admin_pass, value] }
          db_user: { get_param: db_user }
          db_pass:  { get_attr: [db_pass, value] }
          database_host: { get_attr: [service_db, hostname] }

  load_balancer:
    type: "Rackspace::Cloud::LoadBalancer"
    depends_on:
    - django_setup
    properties:
      name: { get_param: load_balancer_hostname }
      nodes:
      - addresses: { get_attr: [django_setup, server_ip] }
        port: 80
        condition: ENABLED
      port: 80
      protocol: HTTP
      algorithm: ROUND_ROBIN
      contentCaching: ENABLED
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4

outputs:
  private_key:
    description: "Private Key"
    value: { get_attr: [ssh_key, private_key] }

  load_balancer_ip:
    description: "Load Balancer IP"
    value: { get_attr: [load_balancer, PublicIp]}

  django_url:
    description: "Django URL"
    value:
      str_replace:
        template: "http://%ip%"
        params:
          "%ip%": { get_attr: [load_balancer, PublicIp] }

  db_host:
    value: { get_attr: [service_db, hostname] }
    description: "Database Host"

  db_user:
    value: { get_param: db_user }
    description: "Database Username"

  db_pass:
    value: { get_attr: [db_pass, value] }
    description: "Database User Password"

  db_name:
    value: "app_data"
    description: "Database Name"

  django_admin_pass:
    value: { get_attr: [django_admin_pass, value] }
    description: "Django Admin Password"
